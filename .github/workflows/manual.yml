name: UAT

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
 workflow_dispatch:
 
    # Inputs the workflow accepts.
    inputs:
      repository:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Name of the GitHub repo'
        # Default value if no value is explicitly provided
        default: 'book-store'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
   
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.1.1
      
        with:
          repository:  "ghosharijit1986/${{ inputs.repository }}"
          ref: release
          


      - name: Create Dir
        run: |
          mkdir config

      - name: Config Checkout
        uses: actions/checkout@v4.1.1
        with:
          repository: "ghosharijit1986/mulesoft-configs-dev"
          ref: main
          path: config
          
      - name: File List using Bash
        run: |
         #cd ./src/main/resources
         ls -la

      - name: File List under Config
        run: |
         cd ./config
         ls -la

      - name: Copy Environment Config to SRC
        run: |
          cp ./config/mule-config-properties.yaml ./src/main/resources/mule-config-properties.yaml
        
      - name: Get Version
        run: |
         VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=version)
         echo $VERSION
      # Runs a single command using the runners shell
      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      # Runs a set of commands using the runners shell
     # - name: Set-up JDK
    #    uses: actions/setup-java@v3
    #    with:
    #      distribution: 'zulu'
     #     java-version: 8
    #  - name: Build with Maven
    #    run: mvn -B package --file pom.xml
      #- name: Stamp artifact file name with commit hash
      #  run: |
      #    artifactName1=$(ls target/*.jar | head -1)
      #    commitHash=$(git rev-parse --short "$GITHUB_SHA")
     #     artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
      #    mv $artifactName1 $artifactName2
    #  - name: Upload artifact 
     #   uses: actions/upload-artifact@v3.1.3
    #    with:
    #      name: ${{ inputs.repository }}
     #     path: target/*.jar
 # publish:
     # needs: [build]
 #     runs-on: ubuntu-latest
  #    permissions:
  #      contents: read
   #     packages: write
 #     steps:
  #        - uses: actions/checkout@v4.1.1
  #          with:
   #           repository:  "ghosharijit1986/${{ inputs.repository }}"
    #          ref: release
    #      - uses: actions/setup-java@v3
     #       with:
    #          java-version: '11'
    #          distribution: 'temurin'
    #      - name: Publish package
    #        run: mvn --batch-mode deploy
    #        env:
     #         PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
  #yaml-read:
    #needs: [build]
    #runs-on: ubuntu-latest
    #steps:
     #- uses: actions/checkout@v4.1.1
     #  with:
     #     repository:  "ghosharijit1986/mulesoft-configs-dev"
    # - name: yaml read
    #   id: yaml-read
    #   uses: pietrobolcato/action-read-yaml@1.1.0
    #   with:
    #    config: "mule-config-properties.yaml"
      
    # - name: Print Outputs
    #   run: |
    #      echo "Variable Name: ${{ steps.yaml-read.outputs['temp.name'] }}"
